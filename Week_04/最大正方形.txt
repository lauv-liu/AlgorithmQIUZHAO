class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        int n = matrix.size();
        if(n <= 0){
            return 0;
        }
        int m = matrix[0].size();
        int res = 0;
        vector<vector<int>>dp(n,vector<int>(m,0));
        for(int i = 0;i<n;++i){
            if(matrix[i][0] == '1'){
                dp[i][0] = 1;
                res = 1;
            }
        }
        for(int i = 0;i<m;++i){
            if(matrix[0][i] == '1'){
                dp[0][i] = 1;
                res = 1;
            }
        }
        for(int i = 1;i<n;++i){
            for(int j = 1;j<m;++j){
                if(matrix[i][j] == '1'){
                    dp[i][j] = min(dp[i-1][j],min(dp[i-1][j-1],dp[i][j-1]))+1;
                }
                res = max(dp[i][j],res);
            }
        }
        return res*res;
    }
};