class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string>res;
        if(n <= 0){
            return res;
        }
        string s ="";
        int left = 0;
        int right = 0;
        dfs(left,right,n,s,res);
        return res;
    }
    void dfs(int left,int right,int n,string s,vector<string>&res){
        if(left == n && right == n){
            res.push_back(s);
            return;
        }
        if(left < n){
            dfs(left+1,right,n,s+'(',res);
        }
        if(right < left){
            dfs(left,right+1,n,s+')',res);
        }
    }
};