class Solution {
public:

    int numIslands(vector<vector<char>>& grid) {
        int n = grid.size();
        if(n <= 0){
            return 0;
        }
        int m = grid[0].size();
        int count = 0;
        for(int i = 0;i<n;++i){
            for(int j = 0;j<m;++j){
                if(grid[i][j] == '1'){
                    BFS(grid,i,j,n,m);
                    ++count;
                }
            }
        }
        return count;
    }
    void BFS(vector<vector<char>>& grid,int i,int j,int n,int m){
        if(i < 0 || j < 0 || i >= n || j >= m || grid[i][j] == '0'){
            return;
        }
        grid[i][j] = '0';
        BFS(grid,i+1,j,n,m);
        BFS(grid,i-1,j,n,m);
        BFS(grid,i,j+1,n,m);
        BFS(grid,i,j-1,n,m);
    }
};